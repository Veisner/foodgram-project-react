name: Foodgram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt 

    - name: Test with flake8
      run: |
        # проверка Flake8
        python -m flake8

#    - name: Django tests
#      run: |
#        # проверка Pytest
#        pytest
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        # Пуш образа в Docker Hub 
        uses: docker/build-push-action@v2 
        with:
          push: true
          context: ./backend/
          tags: veisner/foodgram_backend:latest
  
  # build_frontend:
  #   name: Push frontend to Docker Hub
  #   runs-on: ubuntu-latest
  #   needs: tests
  #   steps:
  #     - name: Check out the repo
  #       # Проверка доступности репозитория Docker Hub для workflow
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       # Вызов сборщика контейнеров docker
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to Docker
  #       # Запуск скрипта авторизации на Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Push to Docker Hub
  #       # Пуш образа в Docker Hub 
  #       uses: docker/build-push-action@v2 
  #       with:
  #         push: true
  #         context: ./frontend/
  #         tags: veisner/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          stack_file_name: docker-compose.yml
          script: |
            sudo docker pull veisner/foodgram_backend:latest
            sudo docker pull veisner/foodgram_frontend:latest
            sudo docker compose stop
            sudo docker compose rm -f web
            touch .env 
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DOMAIN_NAME=${{ secrets.DOMAIN_NAME }} >> .env
            sudo docker compose up -d
            sudo docker image prune -f
  # send_message:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #   - name: send message
  #     uses: appleboy/telegram-action@master
  #     with:
  #       to: ${{ secrets.TELEGRAM_TO }}
  #       token: ${{ secrets.TELEGRAM_TOKEN }}
  #       message: ${{ github.workflow }} успешно выполнен!
